var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"NfoForge","text":"<p>A powerful media upload assistant featuring a step-by-step wizard.</p>"},{"location":"index.html#information","title":"Information","text":"<p>NfoForge is currently under active development, and I\u2019m excited to share it with the community now that it has reached a stable stage.</p> <p>At present, Movies are the only supported media type. However, support for TV shows and Anime is already planned and will be added in the near future.</p>"},{"location":"index.html#key-features","title":"Key Features","text":"<ul> <li>Token system for advanced media file renaming.</li> <li>Integration with TMDB, IMDb, TVDB, and MAL for title parsing.</li> <li>Flexible Jinja-based template system for NFO file generation.</li> <li>Screenshot generation and upload, including comparisons.</li> <li>Output file organization, saving .torrent and NFO files to disk.</li> <li>Torrent cloning support for multi-tracker releases without re-generation.</li> <li>Duplicate release checker - checks trackers for duplicates pre-upload.</li> <li>Integration with Deluge, qBittorrent, Transmission, rTorrent, and watch folders, as well as fast resume support.</li> <li>Plugin support for Python (.py) and compiled (.pyd) files (.pyd compiled files require the same Python version as NfoForge).</li> <li>Support for movie files in MKV and MP4 format.</li> <li>Automatic detection for light/dark mode (with a manual override if desired) Windows only.</li> <li>Additional format support and features coming soon!</li> </ul>"},{"location":"index.html#supported-trackers","title":"Supported Trackers","text":"<ul> <li>BeyondHD</li> <li>MoreThanTV</li> <li>TorrentLeech</li> <li>PassThePopcorn</li> <li>ReelFliX</li> <li>Aither</li> <li>HUNO</li> <li>LST</li> <li>DarkPeers</li> <li>ShareIsland</li> <li>OnlyEncodes</li> <li>UploadCX</li> </ul> <p>Info</p> <p>Supported trackers will be added over time. If you'd like a tracker added, open an issue and it will be considered. Pull requests are also welcome if you have the ability.</p>"},{"location":"index.html#supported-operating-systems","title":"Supported Operating Systems","text":"<ul> <li>Windows 8.1+</li> <li>Linux (tested on Ubuntu 24.04.1 LTS)</li> <li>MacOs (untested)</li> </ul>"},{"location":"index.html#supported-image-hosts","title":"Supported Image Hosts","text":"<ul> <li>Chevereto v3/v4</li> <li>ImageBox</li> <li>ImageBB</li> <li>PTPIMG</li> </ul>"},{"location":"index.html#requirements","title":"Requirements","text":"<ul> <li>TMDB Api key (v3)</li> <li>FFMPEG and/or FrameForge 1.4.0+ depending on your preferred image generation type</li> </ul>"},{"location":"index.html#support","title":"Support","text":"<p>If you have questions, need support, or want a new feature, please open an issue on GitHub.</p>"},{"location":"index.html#attribution","title":"Attribution","text":"<p> Metadata provided by TVDB. Please consider adding missing information or subscribing.</p> <p> Metadata provided by TMDB.</p>"},{"location":"index.html#donations","title":"Donations","text":"<p>NfoForge is a free application. Donations of any size are greatly appreciated and will support NfoForge's active development. Thank you!</p>"},{"location":"index.html#bitcoin","title":"Bitcoin","text":"<p> BTC: <code>bc1qwkhxfea0zmnuatt9fe784q87w0mwl72wd24xxc</code></p>"},{"location":"index.html#ethereum","title":"Ethereum","text":"<p> ETH: <code>0x86a726C7158b852C8001Fb6762f3a263742529e6</code></p>"},{"location":"snippets/generated_templates/file_tokens.html","title":"File tokens","text":"Token Description <code>{edition}</code> Edition <code>{frame_size}</code> Frame size (IMAX/Open Matte) <code>{hybrid}</code> HYBRID <code>{imdb_id}</code> IMDb ID <code>{localization}</code> Subbed/Dubbed <code>{mal_id}</code> MAL ID <code>{mi_audio_bitrate}</code> Audio bitrate (640000) <code>{mi_audio_bitrate_formatted}</code> Audio bitrate formatted (640 kb/s) <code>{mi_audio_channel_s}</code> Audio channels (5.1) <code>{mi_audio_channel_s_i}</code> Audio channels (6) <code>{mi_audio_channel_s_layout}</code> Audio channel layout (L R C LFE Ls Rs Lb Rb) <code>{mi_audio_codec}</code> Audio codec <code>{mi_audio_commercial_name}</code> Audio commercial name (Dolby Digital Plus) <code>{mi_audio_compression}</code> Audio compression (Lossy) <code>{mi_audio_format_info}</code> Audio format info (Enhanced AC-3) <code>{mi_audio_language_1_full}</code> Audio language (first track 'English') <code>{mi_audio_language_1_iso_639_1}</code> Audio language (first track 'EN') <code>{mi_audio_language_1_iso_639_2}</code> Audio language (first track 'ENG') <code>{mi_audio_language_2_iso_639_1}</code> Audio language (first two tracks EN+ES) <code>{mi_audio_language_2_iso_639_2}</code> Audio languages (first two tracks ENG+SPA) <code>{mi_audio_language_all_full}</code> All audio languages (all tracks English Spanish..) <code>{mi_audio_language_all_iso_639_1}</code> All audio languages (all tracks EN+ES+etc..) <code>{mi_audio_language_all_iso_639_2}</code> All audio languages (all tracks ENG+SPA+etc..) <code>{mi_audio_language_dual}</code> Audio language ('Dual Audio' will be returned if there are 2 or more tracks with unique languages) <code>{mi_audio_language_multi}</code> Audio languages ('Multi' will be returned if there are 3 or more tracks with unique languages) <code>{mi_audio_sample_rate}</code> Audio sample rate (48.0 kHz) <code>{mi_video_3d}</code> Video 3D <code>{mi_video_bit_depth_dash}</code> Video bit depth (8-Bit) <code>{mi_video_bit_depth_space}</code> Video bit depth (8 Bit) <code>{mi_video_codec}</code> Video codec <code>{mi_video_dynamic_range}</code> Video dynamic range (HDR/SDR) <code>{mi_video_dynamic_range_type}</code> Video dynamic range type (DV, DV HDR, HDR, HDR10Plus, HLG, PQ) <code>{mi_video_dynamic_range_type_inc_sdr}</code> Video dynamic range type (DV, DV HDR, HDR, HDR10Plus, HLG, PQ and SDR) <code>{mi_video_dynamic_range_type_inc_sdr_over_1080}</code> Video dynamic range type (DV, DV HDR, HDR, HDR10Plus, HLG, PQ and SDR) when video width &gt;= 1080 <code>{mi_video_format}</code> Video format (AVC/HEVC/MPEG Video) <code>{mi_video_height}</code> Video height (1040) <code>{mi_video_language_full}</code> Video language (English) <code>{mi_video_language_iso_639_1}</code> Video language (EN) <code>{mi_video_language_iso_639_2}</code> Video language (ENG) <code>{mi_video_width}</code> Video width (1920) <code>{movie_clean_title}</code> Movie's clean title parsed from TMDB/IMDb <code>{movie_exact_title}</code> Movie's title parsed from TMDB/IMDb with no modifications <code>{movie_title}</code> Movie's title parsed from TMDB/IMDb with minimal formatting <code>{original_filename}</code> Original filename <code>{re_release}</code> Repack/Proper <code>{release_group}</code> Release group <code>{release_year}</code> Release year <code>{release_year_parentheses}</code> Release year with parentheses <code>{releasers_name}</code> Releaser's name (Anonymous) <code>{remux}</code> REMUX <code>{resolution}</code> Resolution (1080p) <code>{source}</code> Source media (BluRay/DVD) <code>{tmdb_id}</code> TMDB ID <code>{tvdb_id}</code> TVDB ID"},{"location":"snippets/generated_templates/nfo_tokens.html","title":"Nfo tokens","text":"Token Description <code>{{ aspect_ratio }}</code> Aspect ratio (2.40:1) <code>{{ chapter_type }}</code> Chapter type (Named / Numbered (1 - 10) / Tagged) <code>{{ duration_detailed }}</code> Duration (02:14:34.065) <code>{{ duration_long }}</code> Duration (2 h 14 min 34 s 65 ms) <code>{{ duration_milliseconds }}</code> Duration in milliseconds (8469985859) <code>{{ duration_short }}</code> Duration (2 h 14 min) <code>{{ file_size }}</code> File size (7.89 GiB) <code>{{ file_size_bytes }}</code> File size in bytes (8469985859) <code>{{ format_profile }}</code> Format Profile (Main@L4) <code>{{ media_file }}</code> Media filename with extension <code>{{ media_file_no_ext }}</code> Media filename without extension <code>{{ media_info }}</code> Mediainfo output with filepath cleansed <code>{{ media_info_short }}</code> Shortened Mediainfo output with filepath cleansed <code>{{ mi_video_bit_rate }}</code> Average video bit-rate in kbps (9975 kbps) <code>{{ mi_video_bit_rate_num_only }}</code> Average video bit-rate in kbps, numbers only (9975) <code>{{ movie_full_title }}</code> Movie's full title with no formatting removed <code>{{ program_info }}</code> NfoForge vx.x.x <code>{{ proper }}</code> Returns 'PROPER' if proper was detected <code>{{ proper_n }}</code> Proper and proper number if exists (PROPER2) <code>{{ proper_reason }}</code> Reason for PROPER if provided <code>{{ release_notes }}</code> Special token that is optionally applied for each job process <code>{{ repack }}</code> Returns 'REPACK' if repack was detected <code>{{ repack_n }}</code> Repack and repack number if exists (REPACK2) <code>{{ repack_reason }}</code> Reason for REPACK if provided <code>{{ screen_shots }}</code> Screenshots <code>{{ screen_shots_comparison }}</code> Screenshots in comparison mode (raw URLs only; user must add comparison tags) <code>{{ screen_shots_even_obj }}</code> Even screenshot objects in a list with both obj.url and obj.medium_url (both are not guaranteed) <code>{{ screen_shots_even_str }}</code> Even screenshot URLs as strings (medium_url if available, else url) <code>{{ screen_shots_odd_obj }}</code> Odd screenshot URLs in a list with both obj.url and obj.medium_url (both are not guaranteed) <code>{{ screen_shots_odd_str }}</code> Odd screenshot URLs as strings (medium_url if available, else url) <code>{{ shared_with }}</code> Shared with NfoForge vx.x.x <code>{{ shared_with_bbcode }}</code> Shared with NfoForge vx.x.x (hyperlink) <code>{{ shared_with_html }}</code> Shared with NfoForge vx.x.x (hyperlink) <code>{{ source_file }}</code> Source filename with extension <code>{{ source_file_no_ext }}</code> Source filename without extension <code>{{ subtitle_s }}</code> English, French, ... <code>{{ video_frame_rate }}</code> FPS (23.976) <code>{{ video_height }}</code> Video height (1080) <code>{{ video_width }}</code> Video width (1920)"},{"location":"view/getting-started/initial-setup.html","title":"Initial Setup","text":"<p>These are the minimal required settings that must be set in order to process files.</p> <ol> <li> <p>Open settings.</p> <p></p> </li> <li> <p>Input your TMDB Api key (v3).</p> <p></p> </li> <li> <p>Configure your desired trackers.</p> <p></p> </li> </ol> <ol> <li> <p>Select Apply to save changes.</p> </li> <li> <p>See Using the Wizard.</p> </li> </ol>"},{"location":"view/getting-started/install.html","title":"Install","text":"<p>Run from Release or Run From Source.</p>"},{"location":"view/getting-started/install.html#run-from-release","title":"Run From Release","text":"<ol> <li>Download the latest release for your operating system.</li> <li>Extract the contents of the release.</li> <li>Execute NfoForge.</li> </ol>"},{"location":"view/getting-started/install.html#run-from-source","title":"Run From Source","text":"<ol> <li>Install uv.</li> </ol> <ol> <li> <p>Install Python with uv if not already installed.  </p> <p>What version of Python?</p> <p>Refer to the requires-python value in <code>pyproject.toml</code> to see the supported Python range.</p> <pre><code>uv python install 3.12\n</code></pre> </li> <li> <p>Create a virtual environment and install dependencies.</p> <pre><code>uv pip install -r pyproject.toml\n</code></pre> </li> <li> <p>Start the application.</p> <pre><code>uv run .\\start_ui.py\n</code></pre> </li> </ol>"},{"location":"view/getting-started/using-the-wizard.html","title":"Using the Wizard","text":"<p>For this guide, we'll be using the movie Big Buck Bunny (2008).</p> <pre><code>General\nComplete name                            : bbb_sunflower_1080p_30fps_stereo_arcc.mp4\nFormat                                   : MPEG-4\nFormat profile                           : Base Media\nCodec ID                                 : isom (isom/avc1)\nFile size                                : 339 MiB\nDuration                                 : 10 min 34 s\nOverall bit rate                         : 4 476 kb/s\nFrame rate                               : 30.000 FPS\nMovie name                               : Big Buck Bunny, Sunflower version\nPerformer                                : Blender Foundation 2008, Janus Bager Kristensen 2013\nComposer                                 : Sacha Goedegebure\nGenre                                    : Animation\nEncoded date                             : 2013-12-16 17:49:00 UTC\nTagged date                              : 2013-12-16 17:49:00 UTC\nComment                                  : Creative Commons Attribution 3.0 - http://bbb3d.renderfarming.net\ncom                                      : Jan Morgenstern\n\nVideo\nID                                       : 1\nFormat                                   : AVC\nFormat/Info                              : Advanced Video Codec\nFormat profile                           : High@L4.2\nFormat settings                          : CABAC / 4 Ref Frames\nFormat settings, CABAC                   : Yes\nFormat settings, Reference frames        : 4 frames\nCodec ID                                 : avc1\nCodec ID/Info                            : Advanced Video Coding\nDuration                                 : 10 min 34 s\nBit rate                                 : 4 000 kb/s\nMaximum bit rate                         : 26.0 Mb/s\nWidth                                    : 1 920 pixels\nHeight                                   : 1 080 pixels\nDisplay aspect ratio                     : 16:9\nFrame rate mode                          : Constant\nFrame rate                               : 30.000 FPS\nColor space                              : YUV\nChroma subsampling                       : 4:2:0\nBit depth                                : 8 bits\nScan type                                : Progressive\nBits/(Pixel*Frame)                       : 0.064\nStream size                              : 302 MiB (89%)\nWriting library                          : x264 core 115\nEncoding settings                        : cabac=1 / ref=4 / deblock=1:1:1 / analyse=0x3:0x133 / me=tesa / subme=10 / psy=1 / psy_rd=0.40:0.00 / mixed_ref=1 / me_range=24 / chroma_me=1 / trellis=2 / 8x8dct=1 / cqm=0 / deadzone=21,11 / fast_pskip=0 / chroma_qp_offset=-2 / threads=12 / sliced_threads=0 / nr=0 / decimate=1 / interlaced=0 / bluray_compat=0 / constrained_intra=0 / bframes=16 / b_pyramid=2 / b_adapt=2 / b_bias=0 / direct=3 / weightb=1 / open_gop=0 / weightp=2 / keyint=250 / keyint_min=25 / scenecut=40 / intra_refresh=0 / rc_lookahead=60 / rc=2pass / mbtree=1 / bitrate=4000 / ratetol=1.0 / qcomp=0.60 / qpmin=0 / qpmax=69 / qpstep=4 / cplxblur=20.0 / qblur=0.5 / ip_ratio=1.40 / aq=1:0.60\nEncoded date                             : 2013-12-16 17:49:00 UTC\nTagged date                              : 2013-12-16 17:49:05 UTC\nCodec configuration box                  : avcC\n\nAudio #1\nID                                       : 2\nFormat                                   : MPEG Audio\nFormat version                           : Version 1\nFormat profile                           : Layer 3\nFormat settings                          : Joint stereo / MS Stereo\nCodec ID                                 : mp4a-6B\nDuration                                 : 10 min 34 s\nBit rate mode                            : Constant\nBit rate                                 : 160 kb/s\nMaximum bit rate                         : 165 kb/s\nChannel(s)                               : 2 channels\nSampling rate                            : 48.0 kHz\nFrame rate                               : 41.667 FPS (1152 SPF)\nCompression mode                         : Lossy\nStream size                              : 12.1 MiB (4%)\nWriting library                          : LAME3.99r\nEncoding settings                        : -m j -V 4 -q 3 -lowpass 17.5 -b 160\nEncoded date                             : 2013-12-16 17:49:04 UTC\nTagged date                              : 2013-12-16 17:49:05 UTC\n\nAudio #2\nID                                       : 3\nFormat                                   : AC-3\nFormat/Info                              : Audio Coding 3\nCommercial name                          : Dolby Digital\nCodec ID                                 : ac-3\nDuration                                 : 10 min 34 s\nBit rate mode                            : Constant\nBit rate                                 : 320 kb/s\nChannel(s)                               : 6 channels\nChannel layout                           : L R C LFE Ls Rs\nSampling rate                            : 48.0 kHz\nFrame rate                               : 31.250 FPS (1536 SPF)\nCompression mode                         : Lossy\nStream size                              : 24.2 MiB (7%)\nService kind                             : Complete Main\nEncoded date                             : 2013-12-16 17:49:05 UTC\nTagged date                              : 2013-12-16 17:49:05 UTC\nDialog Normalization                     : -31 dB\ncmixlev                                  : -4.5 dB\nsurmixlev                                : -6 dB\ndialnorm_Average                         : -31 dB\ndialnorm_Minimum                         : -31 dB\ndialnorm_Maximum                         : -31 dB\n</code></pre>"},{"location":"view/getting-started/using-the-wizard.html#input-page","title":"Input Page","text":"<p>Open a file or folder to start processing files. Drag and drop is also supported in the entry bar.</p> <ol> <li>Open file.</li> <li>Open folder.</li> </ol> <p>Once you've opened the path, you can simply select Next.</p>"},{"location":"view/getting-started/using-the-wizard.html#media-search-page","title":"Media Search Page","text":"<p>The page will immediately parse the file (or attempt to, if the name is somewhat structured) and return some results. If you find no results, refine the search below and try again. Once you have found the appropriate title, simply select it in the top window and press Select Title to continue to the next page.</p> <p>This will parse TMDB, IMDb, TVDb, and Anilist to return metadata for the selected title.</p>"},{"location":"view/getting-started/using-the-wizard.html#rename-page","title":"Rename Page","text":"<p>Info</p> <p>As long as you have Rename Movie ticked in Settings -&gt; Movie you will see this page. It is enabled by default.</p> <p>You'll notice that the TokenReplacer has already used a combination of the filename, metadata, and MediaInfo to give you a clean/proper output: <code>Big.Buck.Bunny.2008.BluRay.1080p.MP2.2.0.x264</code>. This supports numerous overrides and selections, but those will be covered later in the guide. For now, you can simply click Next to continue.</p>"},{"location":"view/getting-started/using-the-wizard.html#images-page","title":"Images Page","text":"<p>Info</p> <p>As long as you have Enable Screenshots ticked in Settings \ud83e\udc2e Screenshots you will see this page. It is enabled by default.</p> <ol> <li>Allows you to open images (.png/.jpeg) that have already been generated.</li> <li>Allows you to paste in any type of URLs.</li> </ol> <p>Generally, you should just click Generate and allow NfoForge to generate images based on the current settings. This requires FFMPEG by default for Basic images. Depending on your device speed, storage speed, and configuration, this could take a few seconds to several minutes. Once it's done, you'll be greeted with the Image Viewer.</p> <p></p> <p>You can directly view the generated images and select the images you want to use for your upload. The left arrows navigate between images, and the arrows on the right select or deselect images. Once you have selected your desired images, you can select the check mark to close the window.</p> <p></p> <p>Select Next to continue.</p>"},{"location":"view/getting-started/using-the-wizard.html#trackers-page","title":"Trackers Page","text":"<p>This page gives you a final chance to configure trackers and select which trackers you'd like to upload this release to. For this example, I'm going to use MoreThanTV with upload disabled (you can toggle this by expanding the tracker).</p> <p>Select Next to continue.</p>"},{"location":"view/getting-started/using-the-wizard.html#release-notes-page","title":"Release Notes Page","text":"<p>This page allows you to create, save, or select a custom release note to inject into the NFO. It will replace the token {{ release_notes }} if it exists in the template.</p> <p>Select Next to continue.</p>"},{"location":"view/getting-started/using-the-wizard.html#template-page","title":"Template Page","text":"<p>This page is quite advanced. However, for this example, we will go over basic usage. By default, there won't be any templates; you must create one to continue.</p> <ol> <li>Create a new template.</li> <li>You'll be greeted with a built-in default template that NfoForge provides.<ul> <li>This template covers the basics and is almost enough to release properly to most trackers.</li> <li>You can customize it to your desire. A more in-depth guide of the token replacer and how it works will be covered later in the guide.</li> <li>For now, we can use this basic template to continue.</li> </ul> </li> <li>You can preview the template.<ul> <li>This will show what your expected template will look like. The only portions that won't appear are those filled by plugins and screenshots, as these are executed and filled at process time later in the wizard.</li> </ul> </li> <li>Once satisfied with your template, you can click this to save changes or press CTRL + S with the text window in focus. You'll see Saved template in the status bar at the bottom of NfoForge.</li> </ol> <p>Select Next to continue.</p>"},{"location":"view/getting-started/using-the-wizard.html#process-page","title":"Process Page","text":"<p>This is the final page where all the processing takes place. If you configured an image host, you'll see it in the drop-down menu.</p> <p>Select the host and click Process (Dupe Check).</p> <p></p> <p>You'll notice that there is one duplicate release found. You can review this and decide if there is a duplicate for your release. If not, simply click Process (Generate and Upload) to continue.</p>"},{"location":"view/getting-started/using-the-wizard.html#overview-and-edit","title":"Overview and Edit","text":"<ul> <li>If enabled (Settings \ud83e\udc2e General \ud83e\udc2e Prompt for Overview) this window will appear.</li> <li>You can edit the final formatted NFO.</li> <li>You can also edit the tracker title (if available).</li> </ul> <p>After reviewing, press OK to apply your changes. If you close the window or press Cancel, your previous data will be used. Processing will continue automatically after you close this window.</p> <p>Note: Some trackers require specific formatting to the tracker title. This will be applied during upload regardless of edits in this window.</p> <p></p> <p>During processing, you'll notice everything is disabled other than the log window, so you can scroll up and down. After things are complete, you'll see an output similar to this.</p> <p></p> <p>Notice the status \u2705 Complete and no errors in the log. Your torrent should be uploaded to the selected tracker (if you chose to upload). Any generated torrents/NFO files can be found in the path displayed in the log window. You can view the created NFO for each tracker you selected.</p> <p>Example from this guide</p> <pre><code>Info\nTitle:                  : Big Buck Bunny (2008)\nFormat Profile          : High@L4.2\nResolution              : 1080p\nAverage Bitrate         : 3994 kbps\n\n[url=https://i.ibb.co/VYcyXyG2/b81e26a4a850.png][img=340]https://i.ibb.co/DfHX3XF5/b81e26a4a850.png[/img][/url]\n[url=https://i.ibb.co/DfNm7WkJ/ca45d57ee8fe.png][img=340]https://i.ibb.co/3mwV0dW3/ca45d57ee8fe.png[/img][/url]\n[url=https://i.ibb.co/svgNNKBD/34ef957a129e.png][img=340]https://i.ibb.co/Fbhyy5Pf/34ef957a129e.png[/img][/url]\n[url=https://i.ibb.co/7JqqVLBy/4f11bf7b7853.png][img=340]https://i.ibb.co/HDjjY3Rg/4f11bf7b7853.png[/img][/url]\n[url=https://i.ibb.co/BVJxkSgL/480a23e43e8f.png][img=340]https://i.ibb.co/bgVZt8r1/480a23e43e8f.png[/img][/url]\n[url=https://i.ibb.co/r233SG0B/c24fbb5b0575.png][img=340]https://i.ibb.co/nMBBvsmX/c24fbb5b0575.png[/img][/url]\n\n\nMediaInfo\nGeneral\nComplete name                            : Big.Buck.Bunny.2008.BluRay.1080p.MP2.2.0.x264.mp4\nFile size                                : 339 MiB\nDuration                                 : 10 min 34 s\nOverall bit rate                         : 4 476 kb/s\nFrame rate                               : 30.000 FPS\n\nVideo\nID                                       : 1\nFormat                                   : AVC\nFormat profile                           : High@L4.2\nDuration                                 : 10 min 34 s\nBit rate                                 : 4 000 kb/s\nWidth                                    : 1 920 pixels\nHeight                                   : 1 080 pixels\nDisplay aspect ratio                     : 16:9\nFrame rate                               : 30.000 FPS\nColor space                              : YUV\nChroma subsampling                       : 4:2:0\nBit depth                                : 8 bits\n\nAudio #1\nID                                       : 2\nCommercial name                          : MPEG Audio\nCodec ID                                 : mp4a-6B\nBit rate                                 : 160 kb/s\nChannel(s)                               : 2 channels\nSampling rate                            : 48.0 kHz\n\nAudio #2\nID                                       : 3\nCommercial name                          : Dolby Digital\nCodec ID                                 : ac-3\nBit rate                                 : 320 kb/s\nChannel(s)                               : 6 channels\nChannelLayout_Original                   : L R C LFE Ls Rs\nSampling rate                            : 48.0 kHz\n\n\nShared with [url=https://github.com/jesterr0/NfoForge]NfoForge v0.8.2[/url]\n</code></pre>"},{"location":"view/token-replacer/advanced.html","title":"Advanced","text":"<p>We'll go over some advanced use cases.</p>"},{"location":"view/token-replacer/advanced.html#user-tokens","title":"User Tokens","text":"<p>In NfoForge, open Settings \u2192 User Tokens to manage user tokens.</p>"},{"location":"view/token-replacer/advanced.html#adding-a-user-token","title":"Adding a User Token","text":"<p>To add a new token, select Add.</p> <ul> <li>Double click the cell in the Token column that you just created to modify the token name.</li> <li>Double click the cell in the Type column that you just created to select the desired token type.</li> </ul> <p>What is the difference between FileTokens and NfoTokens?</p> <p>FileTokens are used for file paths and are accessible everywhere file paths are needed. NfoTokens are only available within NFO templates and cannot be used for file paths. NFOs, however, can use all FileTokens.</p> <p>Below are two newly created tokens.</p>"},{"location":"view/token-replacer/advanced.html#user-nfotoken","title":"User NfoToken","text":""},{"location":"view/token-replacer/advanced.html#user-filetoken","title":"User FileToken","text":""},{"location":"view/token-replacer/advanced.html#example-usage","title":"Example Usage","text":"<p>Below is an NFO template using our two example tokens.</p> <p></p> <p>Output</p> <p></p> <p>Example of file path token.</p> <p></p>"},{"location":"view/token-replacer/advanced.html#global-tokens","title":"Global Tokens","text":"<p>These tokens are meant to be used in NFO templates. Each global token is prefixed with <code>nf_</code>.</p>"},{"location":"view/token-replacer/advanced.html#token-objects","title":"Token Objects","text":"<p>All token objects resets to empty on Start Over or wizard reset. These tokens are updated dynamically throughout the flow of the program. Having this data available can be very powerful for advanced users.</p>"},{"location":"view/token-replacer/advanced.html#nf_shared_data","title":"{{ nf_shared_data }}","text":"<p>This token gives the user access to the SharedPayload dataclass. The field dynamic_data is specifically designed for plugins and numerous other functions that get filled throughout the workflow.</p> <pre><code>@dataclass(slots=True)\nclass SharedPayload:\n    url_data: list[ImageUploadData] = field(default_factory=list)\n    selected_trackers: Sequence[TrackerSelection] | None = None\n    loaded_images: Sequence[Path] | None = None\n    generated_images: bool = False\n    is_comparison_images: bool = False\n    dynamic_data: dict[str, Any] = field(default_factory=dict)\n    release_notes: str | None = None\n\n    def reset(self) -&gt; None:\n        self.url_data.clear()\n        self.selected_trackers = None\n        self.loaded_images = None\n        self.generated_images = False\n        self.is_comparison_images = False\n        self.dynamic_data.clear()\n        self.release_notes = None\n</code></pre>"},{"location":"view/token-replacer/advanced.html#nf_media_search_payload","title":"{{ nf_media_search_payload }}","text":"<p>This token gives the user access to the MediaSearchPayload dataclass.</p> <pre><code>@dataclass(slots=True)\nclass MediaSearchPayload:\n    imdb_id: str | None = None\n    imdb_data: Movie | None = None\n    tmdb_id: str | None = None\n    tmdb_data: dict | None = None\n    tvdb_id: str | None = None\n    tvdb_data: dict | None = None\n    anilist_id: str | None = None\n    anilist_data: dict | None = None\n    mal_id: str | None = None\n    title: str | None = None\n    year: int | None = None\n    original_title: str | None = None\n    genres: list[TMDBGenreIDsMovies | TMDBGenreIDsSeries] = field(default_factory=list)\n\n    def reset(self) -&gt; None:\n        self.imdb_id = None\n        self.imdb_data = None\n        self.tmdb_id = None\n        self.tmdb_data = None\n        self.tvdb_id = None\n        self.tvdb_data = None\n        self.anilist_id = None\n        self.anilist_data = None\n        self.mal_id = None\n        self.title = None\n        self.year = None\n        self.original_title = None\n        self.genres.clear()\n</code></pre>"},{"location":"view/token-replacer/advanced.html#nf_media_input_payload","title":"{{ nf_media_input_payload }}","text":"<p>This token gives the user access to the MediaInputPayload dataclass.</p> <pre><code>@dataclass(slots=True)\nclass MediaInputPayload:\n    script_file: Path | None = None\n    source_file: Path | None = None\n    source_file_mi_obj: MediaInfo | None = None\n    encode_file: Path | None = None\n    encode_file_mi_obj: MediaInfo | None = None\n    encode_file_dir: Path | None = None\n    renamed_file: Path | None = None\n    working_dir: Path | None = None\n\n    def reset(self) -&gt; None:\n        self.script_file = None\n        self.source_file = None\n        self.source_file_mi_obj = None\n        self.encode_file = None\n        self.encode_file_mi_obj = None\n        self.encode_file_dir = None\n        self.renamed_file = None\n        self.working_dir = None\n</code></pre>"},{"location":"view/token-replacer/advanced.html#example-usage_1","title":"Example Usage","text":"<p>Displaying the object directly in the template.</p> <pre><code>{{ nf_media_input_payload }}\n</code></pre> <pre><code>MediaInputPayload(script_file=None, source_file=None, source_file_mi_obj=None, encode_file=WindowsPath('C:/Users/user/Desktop/sample/example/Big.Buck.Bunny.2008.BluRay.1080p.MP2.2.0.x264.mp4'), encode_file_mi_obj=&lt;pymediainfo.MediaInfo object at 0x00000210F6087B90&gt;, encode_file_dir=None, renamed_file=None, working_dir=WindowsPath('C:/Users/user/AppData/Local/nfoforge/Big.Buck.Bunny.2008.BluRay_08.04.2025_02.21.24'))\n</code></pre> <p>You can use the object above in a template. This is a PyMediaInfo object utilizing the method <code>to_data()</code>.</p> <pre><code>{% if nf_media_input_payload.encode_file_mi_obj %}\n{{ nf_media_input_payload.encode_file_mi_obj.to_data() }}\n{% endif %}\n</code></pre> <pre><code>{\n    \"tracks\": [\n        {\n            \"track_type\": \"General\",\n            \"count\": \"350\",\n            \"count_of_stream_of_this_kind\": \"1\",\n            \"kind_of_stream\": \"General\",\n            \"other_kind_of_stream\": [\"General\"],\n            \"stream_identifier\": \"0\",\n            \"count_of_video_streams\": \"1\",\n            \"count_of_audio_streams\": \"2\",\n            \"video_format_list\": \"AVC\",\n            \"video_format_withhint_list\": \"AVC\",\n            \"codecs_video\": \"AVC\",\n            \"audio_format_list\": \"MPEG Audio / AC-3\",\n            \"audio_format_withhint_list\": \"MPEG Audio / AC-3\",\n            \"audio_codecs\": \"MPEG Audio / AC-3\",\n            \"audio_channels_total\": \"8\",\n            \"complete_name\": \"C:\\\\Users\\\\user\\\\Desktop\\\\sample\\\\example\\\\Big.Buck.Bunny.2008.BluRay.1080p.MP2.2.0.x264.mp4\",\n            \"folder_name\": \"C:\\\\Users\\\\user\\\\Desktop\\\\sample\\\\example\",\n            \"file_name_extension\": \"Big.Buck.Bunny.2008.BluRay.1080p.MP2.2.0.x264.mp4\",\n            \"file_name\": \"Big.Buck.Bunny.2008.BluRay.1080p.MP2.2.0.x264\",\n            \"file_extension\": \"mp4\",\n            \"format\": \"MPEG-4\",\n            \"other_format\": [\"MPEG-4\"],\n            \"format_extensions_usually_used\": \"braw mov mp4 m4v m4a m4b m4p m4r 3ga 3gpa 3gpp 3gp 3gpp2 3g2 k3g jpm jpx mqv ismv isma ismt f4a f4b f4v\",\n            \"commercial_name\": \"MPEG-4\",\n            \"format_profile\": \"Base Media\",\n            \"internet_media_type\": \"video/mp4\",\n            \"codec_id\": \"isom\",\n            \"other_codec_id\": [\"isom (isom/avc1)\"],\n            \"codec_id_url\": \"http://www.apple.com/quicktime/download/standalone.html\",\n            \"codecid_compatible\": \"isom/avc1\",\n            \"file_size\": 355040641,\n            \"other_file_size\": [\n                \"339 MiB\",\n                \"339 MiB\",\n                \"339 MiB\",\n                \"339 MiB\",\n                \"338.6 MiB\",\n            ],\n            \"duration\": 634500,\n            \"other_duration\": [\n                \"10 min 34 s\",\n                \"10 min 34 s 500 ms\",\n                \"10 min 34 s\",\n                \"00:10:34.500\",\n                \"00:10:34:15\",\n                \"00:10:34.500 (00:10:34:15)\",\n            ],\n            \"overall_bit_rate\": 4476478,\n            \"other_overall_bit_rate\": [\"4 476 kb/s\"],\n            \"frame_rate\": \"30.000\",\n            \"other_frame_rate\": [\"30.000 FPS\"],\n            \"frame_count\": \"19035\",\n            \"stream_size\": 236023,\n            \"other_stream_size\": [\n                \"230 KiB (0%)\",\n                \"230 KiB\",\n                \"230 KiB\",\n                \"230 KiB\",\n                \"230.5 KiB\",\n                \"230 KiB (0%)\",\n            ],\n            \"proportion_of_this_stream\": \"0.00066\",\n            \"headersize\": \"235477\",\n            \"datasize\": \"354805106\",\n            \"footersize\": \"58\",\n            \"isstreamable\": \"Yes\",\n            \"title\": \"Big Buck Bunny, Sunflower version\",\n            \"movie_name\": \"Big Buck Bunny, Sunflower version\",\n            \"performer\": \"Blender Foundation 2008, Janus Bager Kristensen 2013\",\n            \"composer\": \"Sacha Goedegebure\",\n            \"genre\": \"Animation\",\n            \"encoded_date\": \"2013-12-16 17:49:00 UTC\",\n            \"tagged_date\": \"2013-12-16 17:49:00 UTC\",\n            \"file_creation_date\": \"2025-07-30 22:09:03.199 UTC\",\n            \"file_creation_date__local\": \"2025-07-30 18:09:03.199\",\n            \"file_last_modification_date\": \"2013-12-17 17:49:05.000 UTC\",\n            \"file_last_modification_date__local\": \"2013-12-17 13:49:05.000\",\n            \"comment\": \"Creative Commons Attribution 3.0 - http://bbb3d.renderfarming.net\",\n            \"com\": \"Jan Morgenstern\",\n        },\n        {\n            \"track_type\": \"Video\",\n            \"count\": \"391\",\n            \"count_of_stream_of_this_kind\": \"1\",\n            \"kind_of_stream\": \"Video\",\n            \"other_kind_of_stream\": [\"Video\"],\n            \"stream_identifier\": \"0\",\n            \"streamorder\": \"0\",\n            \"track_id\": 1,\n            \"other_track_id\": [\"1\"],\n            \"format\": \"AVC\",\n            \"other_format\": [\"AVC\"],\n            \"format_info\": \"Advanced Video Codec\",\n            \"format_url\": \"http://developers.videolan.org/x264.html\",\n            \"commercial_name\": \"AVC\",\n            \"format_profile\": \"High@L4.2\",\n            \"format_settings\": \"CABAC / 4 Ref Frames\",\n            \"format_settings__cabac\": \"Yes\",\n            \"other_format_settings__cabac\": [\"Yes\"],\n            \"format_settings__reference_frames\": 4,\n            \"other_format_settings__reference_frames\": [\"4 frames\"],\n            \"internet_media_type\": \"video/H264\",\n            \"codec_id\": \"avc1\",\n            \"codec_id_info\": \"Advanced Video Coding\",\n            \"duration\": 634500,\n            \"other_duration\": [\n                \"10 min 34 s\",\n                \"10 min 34 s 500 ms\",\n                \"10 min 34 s\",\n                \"00:10:34.500\",\n                \"00:10:34:15\",\n                \"00:10:34.500 (00:10:34:15)\",\n            ],\n            \"bit_rate\": 4000000,\n            \"other_bit_rate\": [\"4 000 kb/s\"],\n            \"maximum_bit_rate\": 25957272,\n            \"other_maximum_bit_rate\": [\"26.0 Mb/s\"],\n            \"width\": 1920,\n            \"other_width\": [\"1 920 pixels\"],\n            \"height\": 1080,\n            \"other_height\": [\"1 080 pixels\"],\n            \"stored_height\": \"1088\",\n            \"sampled_width\": \"1920\",\n            \"sampled_height\": \"1080\",\n            \"pixel_aspect_ratio\": \"1.000\",\n            \"display_aspect_ratio\": \"1.778\",\n            \"other_display_aspect_ratio\": [\"16:9\"],\n            \"rotation\": \"0.000\",\n            \"frame_rate_mode\": \"CFR\",\n            \"other_frame_rate_mode\": [\"Constant\"],\n            \"frame_rate\": \"30.000\",\n            \"other_frame_rate\": [\"30.000 FPS\"],\n            \"framerate_num\": \"30\",\n            \"framerate_den\": \"1\",\n            \"frame_count\": \"19035\",\n            \"color_space\": \"YUV\",\n            \"chroma_subsampling\": \"4:2:0\",\n            \"other_chroma_subsampling\": [\"4:2:0\"],\n            \"bit_depth\": 8,\n            \"other_bit_depth\": [\"8 bits\"],\n            \"scan_type\": \"Progressive\",\n            \"other_scan_type\": [\"Progressive\"],\n            \"bits__pixel_frame\": \"0.064\",\n            \"stream_size\": 316755338,\n            \"other_stream_size\": [\n                \"302 MiB (89%)\",\n                \"302 MiB\",\n                \"302 MiB\",\n                \"302 MiB\",\n                \"302.1 MiB\",\n                \"302 MiB (89%)\",\n            ],\n            \"proportion_of_this_stream\": \"0.89217\",\n            \"writing_library\": \"x264 - core 115\",\n            \"other_writing_library\": [\"x264 core 115\"],\n            \"encoded_library_name\": \"x264\",\n            \"encoded_library_version\": \"core 115\",\n            \"encoding_settings\": \"cabac=1 / ref=4 / deblock=1:1:1 / analyse=0x3:0x133 / me=tesa / subme=10 / psy=1 / psy_rd=0.40:0.00 / mixed_ref=1 / me_range=24 / chroma_me=1 / trellis=2 / 8x8dct=1 / cqm=0 / deadzone=21,11 / fast_pskip=0 / chroma_qp_offset=-2 / threads=12 / sliced_threads=0 / nr=0 / decimate=1 / interlaced=0 / bluray_compat=0 / constrained_intra=0 / bframes=16 / b_pyramid=2 / b_adapt=2 / b_bias=0 / direct=3 / weightb=1 / open_gop=0 / weightp=2 / keyint=250 / keyint_min=25 / scenecut=40 / intra_refresh=0 / rc_lookahead=60 / rc=2pass / mbtree=1 / bitrate=4000 / ratetol=1.0 / qcomp=0.60 / qpmin=0 / qpmax=69 / qpstep=4 / cplxblur=20.0 / qblur=0.5 / ip_ratio=1.40 / aq=1:0.60\",\n            \"encoded_date\": \"2013-12-16 17:49:00 UTC\",\n            \"tagged_date\": \"2013-12-16 17:49:05 UTC\",\n            \"codec_configuration_box\": \"avcC\",\n        },\n        {\n            \"track_type\": \"Audio\",\n            \"count\": \"285\",\n            \"count_of_stream_of_this_kind\": \"2\",\n            \"kind_of_stream\": \"Audio\",\n            \"other_kind_of_stream\": [\"Audio\"],\n            \"stream_identifier\": 0,\n            \"other_stream_identifier\": [\"1\"],\n            \"streamorder\": \"1\",\n            \"track_id\": 2,\n            \"other_track_id\": [\"2\"],\n            \"format\": \"MPEG Audio\",\n            \"other_format\": [\"MPEG Audio\"],\n            \"commercial_name\": \"MPEG Audio\",\n            \"format_version\": \"Version 1\",\n            \"format_profile\": \"Layer 3\",\n            \"format_settings\": \"Joint stereo / MS Stereo\",\n            \"mode\": \"Joint stereo\",\n            \"mode_extension\": \"MS Stereo\",\n            \"internet_media_type\": \"audio/mpeg\",\n            \"codec_id\": \"mp4a-6B\",\n            \"duration\": 634200,\n            \"other_duration\": [\n                \"10 min 34 s\",\n                \"10 min 34 s 200 ms\",\n                \"10 min 34 s\",\n                \"00:10:34.200\",\n                \"00:10:34.200\",\n            ],\n            \"bit_rate_mode\": \"CBR\",\n            \"other_bit_rate_mode\": [\"Constant\"],\n            \"bit_rate\": 160000,\n            \"other_bit_rate\": [\"160 kb/s\"],\n            \"maximum_bit_rate\": 165120,\n            \"other_maximum_bit_rate\": [\"165 kb/s\"],\n            \"channel_s\": 2,\n            \"other_channel_s\": [\"2 channels\"],\n            \"samples_per_frame\": \"1152\",\n            \"sampling_rate\": 48000,\n            \"other_sampling_rate\": [\"48.0 kHz\"],\n            \"samples_count\": \"30440448\",\n            \"frame_rate\": \"41.667\",\n            \"other_frame_rate\": [\"41.667 FPS (1152 SPF)\"],\n            \"frame_count\": \"26424\",\n            \"compression_mode\": \"Lossy\",\n            \"other_compression_mode\": [\"Lossy\"],\n            \"stream_size\": 12683520,\n            \"other_stream_size\": [\n                \"12.1 MiB (4%)\",\n                \"12 MiB\",\n                \"12 MiB\",\n                \"12.1 MiB\",\n                \"12.10 MiB\",\n                \"12.1 MiB (4%)\",\n            ],\n            \"proportion_of_this_stream\": \"0.03572\",\n            \"writing_library\": \"LAME3.99r\",\n            \"other_writing_library\": [\"LAME3.99r\"],\n            \"encoding_settings\": \"-m j -V 4 -q 3 -lowpass 17.5 -b 160\",\n            \"encoded_date\": \"2013-12-16 17:49:04 UTC\",\n            \"tagged_date\": \"2013-12-16 17:49:05 UTC\",\n        },\n        {\n            \"track_type\": \"Audio\",\n            \"count\": \"301\",\n            \"count_of_stream_of_this_kind\": \"2\",\n            \"kind_of_stream\": \"Audio\",\n            \"other_kind_of_stream\": [\"Audio\"],\n            \"stream_identifier\": 1,\n            \"other_stream_identifier\": [\"2\"],\n            \"streamorder\": \"2\",\n            \"track_id\": 3,\n            \"other_track_id\": [\"3\"],\n            \"format\": \"AC-3\",\n            \"other_format\": [\"AC-3\"],\n            \"format_info\": \"Audio Coding 3\",\n            \"format_url\": \"https://en.wikipedia.org/wiki/AC3\",\n            \"commercial_name\": \"Dolby Digital\",\n            \"other_commercial_name\": [\"Dolby Digital\"],\n            \"format_settings__endianness\": \"Big\",\n            \"codec_id\": \"ac-3\",\n            \"duration\": 634143,\n            \"other_duration\": [\n                \"10 min 34 s\",\n                \"10 min 34 s 143 ms\",\n                \"10 min 34 s\",\n                \"00:10:34.143\",\n                \"00:10:34.143\",\n            ],\n            \"bit_rate_mode\": \"CBR\",\n            \"other_bit_rate_mode\": [\"Constant\"],\n            \"bit_rate\": 320000,\n            \"other_bit_rate\": [\"320 kb/s\"],\n            \"channel_s\": 6,\n            \"other_channel_s\": [\"6 channels\"],\n            \"channel_positions\": \"Front: L C R, Side: L R, LFE\",\n            \"other_channel_positions\": [\"3/2/0.1\"],\n            \"channel_layout\": \"L R C LFE Ls Rs\",\n            \"samples_per_frame\": \"1536\",\n            \"sampling_rate\": 48000,\n            \"other_sampling_rate\": [\"48.0 kHz\"],\n            \"samples_count\": \"30438864\",\n            \"frame_rate\": \"31.250\",\n            \"other_frame_rate\": [\"31.250 FPS (1536 SPF)\"],\n            \"frame_count\": \"19817\",\n            \"compression_mode\": \"Lossy\",\n            \"other_compression_mode\": [\"Lossy\"],\n            \"stream_size\": 25365760,\n            \"other_stream_size\": [\n                \"24.2 MiB (7%)\",\n                \"24 MiB\",\n                \"24 MiB\",\n                \"24.2 MiB\",\n                \"24.19 MiB\",\n                \"24.2 MiB (7%)\",\n            ],\n            \"proportion_of_this_stream\": \"0.07144\",\n            \"service_kind\": \"CM\",\n            \"other_service_kind\": [\"Complete Main\"],\n            \"encoded_date\": \"2013-12-16 17:49:05 UTC\",\n            \"tagged_date\": \"2013-12-16 17:49:05 UTC\",\n            \"bsid\": \"8\",\n            \"dialog_normalization\": -31,\n            \"other_dialog_normalization\": [\"-31 dB\"],\n            \"acmod\": \"7\",\n            \"lfeon\": \"1\",\n            \"cmixlev\": \"-4.5\",\n            \"other_cmixlev\": [\"-4.5 dB\"],\n            \"surmixlev\": \"-6 dB\",\n            \"other_surmixlev\": [\"-6 dB\"],\n            \"dialnorm_average\": -31,\n            \"other_dialnorm_average\": [\"-31 dB\"],\n            \"dialnorm_minimum\": -31,\n            \"other_dialnorm_minimum\": [\"-31 dB\"],\n            \"dialnorm_maximum\": -31,\n            \"other_dialnorm_maximum\": [\"-31 dB\"],\n            \"dialnorm_count\": \"32\",\n        },\n    ]\n}\n</code></pre> <p>To display the duration of the loaded object, first check that the object exists. Then, set a variable named <code>general_track</code> to the first general track, and access the first value in its <code>other_duration</code> list:</p> <pre><code>{% if nf_media_input_payload.encode_file_mi_obj %}\n{% set general_track = nf_media_input_payload.encode_file_mi_obj.general_tracks[0] %}\n{{ general_track.other_duration[0] }}\n{% endif %}\n</code></pre> <pre><code>10 min 34 s\n</code></pre>"},{"location":"view/token-replacer/flat.html","title":"Flat Strings","text":"<p>Flat Strings</p> <p>Flat strings are defined by a single line of text. e.g. <code>Big.Buck.Bunny.2008.BluRay.1080p.MP2.2.0.x264</code>.</p> <p>NfoForge will automatically use the formatter in flat mode for paths (files and folders).</p>"},{"location":"view/token-replacer/flat.html#format","title":"Format","text":"<p>FileTokens are only available in flat mode when used directly in NfoForge. You'll notice that flat tokens have a single set of brackets, e.g., <code>{movie_title}</code>.</p>"},{"location":"view/token-replacer/flat.html#usage","title":"Usage","text":"<p>A token string is simply a combination of tokens and text.</p> <p>What is a string?</p> <p>A string is a sequence of characters. This includes letters, numbers, and symbols.</p> <p>Example of a token string:</p> <pre><code>{movie_clean_title} {release_year} {edition} {re_release} {source} {resolution} {mi_audio_codec} {mi_audio_channel_s} {mi_video_dynamic_range_type_inc_sdr_over_1080} {mi_video_codec}\n</code></pre> <p>When filled:</p> <pre><code>Movie Name 2025 Directors Cut REPACK UHD BluRay 2160p TrueHD Atmos 7.1 DV HDR HEVC\n</code></pre> <p>The output will vary based on the file that is opened. If you are familiar with Radarr/Sonarr, this works very similarly.</p>"},{"location":"view/token-replacer/flat.html#optional-text","title":"Optional Text","text":"<p>You can use tokens with an optional syntax to only add text if the token is filled by the formatter. This is done with the syntax <code>:opt=*:</code>, where you replace the asterisk with whatever text you want.</p> <p>Example of a token string with opt syntax:</p> <pre><code>{movie_clean_title} {:opt=(:release_year:opt=):} {edition} {re_release} {source} {resolution} {mi_audio_codec} {mi_audio_channel_s} {mi_video_dynamic_range_type_inc_sdr_over_1080} {mi_video_codec}\n</code></pre> <p>Note the token <code>{:opt=(:release_year:opt=):}</code>. We're using <code>:opt=(:</code> and <code>:opt=):</code> to wrap the year with parentheses. This allows for many use cases and enables a high degree of customization.</p> <p>When filled with opt syntax:</p> <pre><code>Movie Name (2025) Directors Cut REPACK UHD BluRay 2160p TrueHD Atmos 7.1 DV HDR HEVC\n</code></pre> <p>You can see this in action in real time inside NfoForge under Settings \u2192 Movie.</p> <p></p>"},{"location":"view/token-replacer/flat.html#filters","title":"Filters","text":"<p>You can apply several filters to filled tokens to fine-tune your output. Each example below defines a string and shows the result before and after applying a filter. Filters are simple to use:</p> <ul> <li>Define a filter using the <code>|</code> character inside the brackets, immediately after the token name: <code>{token|filter}</code>.</li> <li>You can still use opt for optional text, but filters are only applied to the token value itself. The filter must be placed before opt. For example: <code>{:opt=x:token|filter:opt=x:}</code>.</li> </ul> <p>Info</p> <p>Filters work identically to their Python equivalents.</p>"},{"location":"view/token-replacer/flat.html#upper","title":"upper","text":"<p>{example_token} = tom</p> <pre><code>{:opt=hi :example_token|upper}\n</code></pre> <pre><code>hi TOM\n</code></pre>"},{"location":"view/token-replacer/flat.html#lower","title":"lower","text":"<p>{example_token} = TOM</p> <pre><code>{:opt=hi :example_token|lower}\n</code></pre> <pre><code>hi tom\n</code></pre>"},{"location":"view/token-replacer/flat.html#title","title":"title","text":"<p>{example_token} = TOM</p> <pre><code>{:opt=hi :example_token|title}\n</code></pre> <pre><code>hi Tom\n</code></pre>"},{"location":"view/token-replacer/flat.html#swapcase","title":"swapcase","text":"<p>{example_token} = Tom</p> <pre><code>{:opt=hi :example_token|swapcase}\n</code></pre> <pre><code>hi tOM\n</code></pre>"},{"location":"view/token-replacer/flat.html#capitalize","title":"capitalize","text":"<p>{example_token} = tom</p> <pre><code>{:opt=hi :example_token|capitalize}\n</code></pre> <pre><code>hi Tom\n</code></pre>"},{"location":"view/token-replacer/flat.html#zfill","title":"zfill","text":"<p>{example_token} = 42</p> <pre><code>{:opt=hi :example_token|zfill(5)}\n</code></pre> <pre><code>hi 00042\n</code></pre>"},{"location":"view/token-replacer/flat.html#replace","title":"replace","text":"<p>{example_token} = tom</p> <pre><code>{:opt=hi :example_token|replace(\"m\", \"mmy\")}\n</code></pre> <pre><code>hi tommy\n</code></pre> <p>You can use single or double quotes for the arguments, and any character (including commas, spaces, or quotes) can be replaced. For example:</p> <pre><code>{:opt=hi :example_token|replace(',', '-')}\n{:opt=hi :example_token|replace('foo,bar', 'baz,qux')}\n</code></pre>"},{"location":"view/token-replacer/flat.html#chained-filters","title":"Chained Filters","text":"<p>You can chain multiple filters together by separating them with <code>|</code>. Filters are applied in order from left to right.</p> <p>{example_token} = tom</p> <pre><code>{:opt=hi :example_token|replace(\"m\", \"mmy\")|upper}\n</code></pre> <pre><code>hi TOMMY\n</code></pre>"},{"location":"view/token-replacer/flat.html#additional-information","title":"Additional Information","text":"<p>There are three built-in rename token strings:</p> <ul> <li>Filename token string<ul> <li>The filename (or folder, if applicable) is shared across all trackers.</li> <li>There can only be one of these tokens.</li> </ul> </li> <li>Title token string (global)<ul> <li>A single global token shared across all trackers that don't have an override.</li> </ul> </li> <li>Per-tracker Title token string override<ul> <li>Overrides the global title token for each tracker.</li> </ul> </li> </ul>"},{"location":"view/token-replacer/introduction.html","title":"Token Replacer","text":"<p>Formatter to replace tokens in filenames and in NFOs. The formatter works differently based on the type of strings it's formatting. Flat and multi-line strings are formatted and support different features. NfoForge utilizes TokenReplacer to fill tokens during formatting.</p>"},{"location":"view/token-replacer/multi-line.html","title":"Multi-line Strings","text":"<p>Multi-line Strings</p> <p>Multi-line strings are defined by one or more lines of text. <pre><code>Title         : Big Buck Bunny (2008)\nResolution    : 1080p\nFile size     : 339 MiB\n</code></pre></p>"},{"location":"view/token-replacer/multi-line.html#format","title":"Format","text":"<p>For multi-line strings both FileTokens and NfoTokens are available for use in NfoForge. Also, multi-line tokens must use two sets of brackets, e.g., <code>{{ movie_title }}</code>.</p> <p>Tip</p> <p>Whitespace inside the tokens is not required (is ignored), but by convention, your tokens should have a space before the text inside the token. e.g., <code>{{ movie_title }}</code> instead of <code>{{movie_title}}</code>.</p>"},{"location":"view/token-replacer/multi-line.html#usage","title":"Usage","text":"<p>This part of NfoForge's formatter utilizes Jinja.</p> <p>What is Jinja?</p> <p>Jinja is a fast, expressive, extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. The template is then passed data to render the final document.</p> <p>Example of a token string:</p> <pre><code>Info\nTitle                   : {{ movie_title }} {{ release_year_parentheses }}\nFormat Profile          : {{ format_profile }}\nResolution              : {{ resolution }}\nAverage Bitrate         : {{ mi_video_bit_rate }}\n{% if releasers_name %}\nEncoder                 : {{ releasers_name }}\n{% endif %}\n\n{% if screen_shots %}\n{{ screen_shots }}\n{% endif %}\n\n{% if release_notes %}\nRelease Notes:\n{{ release_notes }}\n{% endif %}\n\n{% if media_info_short %}\nMediaInfo\n{{ media_info_short }}\n{% endif %}\n\n{{ shared_with_bbcode }}\n</code></pre> <p>When filled:</p> <pre><code>Info\nTitle                   : Big Buck Bunny (2008)\nFormat Profile          : High@L4.2\nResolution              : 1080p\nAverage Bitrate         : 3994 kbps\nEncoder                 : anon\n\n#### DUMMY SCREENSHOTS ####\n(Real screenshots will be generated on the process page in the appropriate format for the tracker)\nScreen1 Screen2\nScreen3 Screen4\n#### DUMMY SCREENSHOTS ####\n\nMediaInfo\nGeneral\nComplete name                            : Big.Buck.Bunny.2008.BluRay.1080p.MP2.2.0.x264.mp4\nFile size                                : 339 MiB\nDuration                                 : 10 min 34 s\nOverall bit rate                         : 4 476 kb/s\nFrame rate                               : 30.000 FPS\n\nVideo\nID                                       : 1\nFormat                                   : AVC\nFormat profile                           : High@L4.2\nDuration                                 : 10 min 34 s\nBit rate                                 : 4 000 kb/s\nWidth                                    : 1 920 pixels\nHeight                                   : 1 080 pixels\nDisplay aspect ratio                     : 16:9\nFrame rate                               : 30.000 FPS\nColor space                              : YUV\nChroma subsampling                       : 4:2:0\nBit depth                                : 8 bits\n\nAudio #1\nID                                       : 2\nCommercial name                          : MPEG Audio\nCodec ID                                 : mp4a-6B\nBit rate                                 : 160 kb/s\nChannel(s)                               : 2 channels\nSampling rate                            : 48.0 kHz\n\nAudio #2\nID                                       : 3\nCommercial name                          : Dolby Digital\nCodec ID                                 : ac-3\nBit rate                                 : 320 kb/s\nChannel(s)                               : 6 channels\nChannelLayout_Original                   : L R C LFE Ls Rs\nSampling rate                            : 48.0 kHz\n\n\nShared with [url=https://github.com/jesterr0/NfoForge]NfoForge v0.8.2[/url]\n</code></pre>"},{"location":"view/token-replacer/multi-line.html#additional-information","title":"Additional Information","text":"<p>You can use if statements, loops, etc. A quick look at Jinja's documentation can help you understand these features if you aren't familiar.</p> <p>Conditional Example:</p> <p>Suppose you have filled in a movie, but you're unsure if there will be an edition. You can add this in an if statement and only display Edition if it's available or detected.</p> <pre><code>Info\nTitle                   : {{ movie_title }} {{ release_year_parentheses }}\n{% if edition %}\nEdition                 : {{ edition }}\n{% else %}\nEdition                 : None\n{% endif %}\n</code></pre> <p>Info</p> <p>Detects if there is an edition detected and fills it with a clean formatted output. If there is not any editions detected it outputs 'None' as the edition.</p> <p>Output:</p> <pre><code>Info\nTitle                   : Big Buck Bunny (2008)\nEdition                 : Extended Cut\n</code></pre>"},{"location":"view/token-replacer/multi-line.html#jinja-filters","title":"Jinja Filters","text":"<p>While I can't go over all of what jinja supports (it would take forever and they have very clean documentation), I figured I could go over a quick useful example called the replace filter. This works identically to Pythons built in string function replace.</p> <p>Example:</p> <pre><code>{{ mi_audio_bitrate_formatted }}\n</code></pre> <p>Output:</p> <pre><code>160 kb/s\n</code></pre> <p>Let's say you want to swap <code>/</code> for <code>'</code>.</p> <p>In:</p> <pre><code>{{ mi_audio_bitrate_formatted|replace(\"/\", \"'\") }}\n</code></pre> <p>Out:</p> <pre><code>160 kb's\n</code></pre> <p>You can also chain multiple filters together.</p> <p>In:</p> <pre><code>{{ mi_audio_bitrate_formatted|replace(\"/\", \"'\")|replace(\" \", \"\") }}\n</code></pre> <p>Out:</p> <pre><code>160kb's\n</code></pre>"},{"location":"view/token-replacer/multi-line.html#sandbox","title":"Sandbox","text":"<p>In NfoForge, open Settings \u2192 Templates to build templates and use the sandbox feature. Once you have created a new template, you can click the icon to preview your filled template.</p> <p></p> <p>Open a file to test out the sandbox (this brings up the search widget to parse the file's details).</p> <p></p> <p>Tip</p> <p>As long as you stay in the settings window, the file is cached and won't have to be reloaded for each change to your template when modifying or testing things out.</p> <p>You will see the filled template. Here, you can deselect the preview button to make changes to the template and test things out as many times as you'd like.</p> <p></p>"},{"location":"view/token-replacer/prompt-tokens.html","title":"Prompt Tokens","text":"<p>Prompt tokens are single-use tokens that prompt the user for input during the workflow, allowing you to format NFO templates wherever a prompt token appears. They are considered a type of NfoToken, but are only defined at runtime and are not retained for your next workflow.</p> <p>Tip</p> <p>If you're looking for tokens that are static, refer to user tokens.</p>"},{"location":"view/token-replacer/prompt-tokens.html#format-and-information","title":"Format and Information","text":"<p>Prompt tokens are formatted identically to multi-line tokens, with a few key differences:</p> <ul> <li>They must be prefixed with prompt_.</li> <li>Tokens are only defined in the NFO template.</li> <li>Tokens should consist of all lowercase word characters.</li> <li>Tokens are used exactly as the user inputs them; no whitespace or additional new lines will be stripped, and no other formatting will be applied.</li> </ul>"},{"location":"view/token-replacer/prompt-tokens.html#usage","title":"Usage","text":"<p>See the example below, where the token {{ prompt_source }} is defined in the template.</p> <pre><code>Title                   : {{ movie_title }} {{ release_year_parentheses }}\nFormat Profile          : {{ format_profile }}\nResolution              : {{ resolution }}\n\n{% if prompt_source %}\nSource                  : {{ prompt_source }}\n{% endif %}\n</code></pre> <p>Is the if statement required?</p> <p>The if statement is not required when using prompt tokens. However, it is good practice to include it in case the user does not provide a value when prompted.</p>"},{"location":"view/token-replacer/prompt-tokens.html#identical-tokens-in-multiple-templates","title":"Identical Tokens in Multiple Templates","text":"<p>Suppose you are releasing to multiple trackers simultaneously.</p> <p>MoreThanTV:</p> <pre><code>...\n{% if prompt_source %}\nSource                  : {{ prompt_source }}\n{% endif %}\n...\n</code></pre> <p>TorrentLeech:</p> <pre><code>...\n{% if prompt_source %}\nSource                  : {{ prompt_source }}\n{% endif %}\n{% if prompt_source_type %}\nSource Type             : {{ prompt_source_type }}\n{% endif %}\n...\n</code></pre> <p>BeyondHD:</p> <pre><code>...\n{% if prompt_sources %}\nSources                 : {{ prompt_sources }}\n{% endif %}\n...\n</code></pre> <p>Across these three templates, there are three prompt tokens defined, of which two are unique. During the workflow, you will be prompted once to fill in all the tokens. Tokens that are identical will be filled with the same value provided by the user.</p> <p>If the user provides the following values:</p> <ul> <li>prompt_source = Some Group</li> <li>prompt_source_type = BluRay</li> <li>prompt_sources = Some Group 1, Some Group 2, Some Group 3</li> </ul> <p>MoreThanTV:</p> <pre><code>...\nSource                  : Some Group\n...\n</code></pre> <p>TorrentLeech:</p> <pre><code>...\nSource                  : Some Group\nSource Type             : BluRay\n...\n</code></pre> <p>BeyondHD:</p> <pre><code>...\nSources                 : Some Group 1, Some Group 2, Some Group 3\n...\n</code></pre> <p>Info</p> <p>Note that shared tokens will have the same value across all templates. If you need unique values, make sure to use different prompt tokens in each template.</p>"},{"location":"view/token-replacer/prompt-tokens.html#nfoforge-example","title":"NfoForge Example","text":"<p>Template:</p> <pre><code>{{ prompt_a3_token }}\n\n{{ prompt_a4_token }}\n</code></pre> <p>Editor:</p> <p></p> <p>Info</p> <p>The pop-up will warn you if any token values are unfilled, giving you another chance to correct them if needed.</p>"},{"location":"view/token-replacer/tokens.html","title":"Tokens","text":""},{"location":"view/token-replacer/tokens.html#types","title":"Types","text":"<p>There are currently two types of tokens: NfoTokens and FileTokens.</p> NfoTokensFileTokens Token Description <code>{{ aspect_ratio }}</code> Aspect ratio (2.40:1) <code>{{ chapter_type }}</code> Chapter type (Named / Numbered (1 - 10) / Tagged) <code>{{ duration_detailed }}</code> Duration (02:14:34.065) <code>{{ duration_long }}</code> Duration (2 h 14 min 34 s 65 ms) <code>{{ duration_milliseconds }}</code> Duration in milliseconds (8469985859) <code>{{ duration_short }}</code> Duration (2 h 14 min) <code>{{ file_size }}</code> File size (7.89 GiB) <code>{{ file_size_bytes }}</code> File size in bytes (8469985859) <code>{{ format_profile }}</code> Format Profile (Main@L4) <code>{{ media_file }}</code> Media filename with extension <code>{{ media_file_no_ext }}</code> Media filename without extension <code>{{ media_info }}</code> Mediainfo output with filepath cleansed <code>{{ media_info_short }}</code> Shortened Mediainfo output with filepath cleansed <code>{{ mi_video_bit_rate }}</code> Average video bit-rate in kbps (9975 kbps) <code>{{ mi_video_bit_rate_num_only }}</code> Average video bit-rate in kbps, numbers only (9975) <code>{{ movie_full_title }}</code> Movie's full title with no formatting removed <code>{{ program_info }}</code> NfoForge vx.x.x <code>{{ proper }}</code> Returns 'PROPER' if proper was detected <code>{{ proper_n }}</code> Proper and proper number if exists (PROPER2) <code>{{ proper_reason }}</code> Reason for PROPER if provided <code>{{ release_notes }}</code> Special token that is optionally applied for each job process <code>{{ repack }}</code> Returns 'REPACK' if repack was detected <code>{{ repack_n }}</code> Repack and repack number if exists (REPACK2) <code>{{ repack_reason }}</code> Reason for REPACK if provided <code>{{ screen_shots }}</code> Screenshots <code>{{ screen_shots_comparison }}</code> Screenshots in comparison mode (raw URLs only; user must add comparison tags) <code>{{ screen_shots_even_obj }}</code> Even screenshot objects in a list with both obj.url and obj.medium_url (both are not guaranteed) <code>{{ screen_shots_even_str }}</code> Even screenshot URLs as strings (medium_url if available, else url) <code>{{ screen_shots_odd_obj }}</code> Odd screenshot URLs in a list with both obj.url and obj.medium_url (both are not guaranteed) <code>{{ screen_shots_odd_str }}</code> Odd screenshot URLs as strings (medium_url if available, else url) <code>{{ shared_with }}</code> Shared with NfoForge vx.x.x <code>{{ shared_with_bbcode }}</code> Shared with NfoForge vx.x.x (hyperlink) <code>{{ shared_with_html }}</code> Shared with NfoForge vx.x.x (hyperlink) <code>{{ source_file }}</code> Source filename with extension <code>{{ source_file_no_ext }}</code> Source filename without extension <code>{{ subtitle_s }}</code> English, French, ... <code>{{ video_frame_rate }}</code> FPS (23.976) <code>{{ video_height }}</code> Video height (1080) <code>{{ video_width }}</code> Video width (1920) Token Description <code>{edition}</code> Edition <code>{frame_size}</code> Frame size (IMAX/Open Matte) <code>{hybrid}</code> HYBRID <code>{imdb_id}</code> IMDb ID <code>{localization}</code> Subbed/Dubbed <code>{mal_id}</code> MAL ID <code>{mi_audio_bitrate}</code> Audio bitrate (640000) <code>{mi_audio_bitrate_formatted}</code> Audio bitrate formatted (640 kb/s) <code>{mi_audio_channel_s}</code> Audio channels (5.1) <code>{mi_audio_channel_s_i}</code> Audio channels (6) <code>{mi_audio_channel_s_layout}</code> Audio channel layout (L R C LFE Ls Rs Lb Rb) <code>{mi_audio_codec}</code> Audio codec <code>{mi_audio_commercial_name}</code> Audio commercial name (Dolby Digital Plus) <code>{mi_audio_compression}</code> Audio compression (Lossy) <code>{mi_audio_format_info}</code> Audio format info (Enhanced AC-3) <code>{mi_audio_language_1_full}</code> Audio language (first track 'English') <code>{mi_audio_language_1_iso_639_1}</code> Audio language (first track 'EN') <code>{mi_audio_language_1_iso_639_2}</code> Audio language (first track 'ENG') <code>{mi_audio_language_2_iso_639_1}</code> Audio language (first two tracks EN+ES) <code>{mi_audio_language_2_iso_639_2}</code> Audio languages (first two tracks ENG+SPA) <code>{mi_audio_language_all_full}</code> All audio languages (all tracks English Spanish..) <code>{mi_audio_language_all_iso_639_1}</code> All audio languages (all tracks EN+ES+etc..) <code>{mi_audio_language_all_iso_639_2}</code> All audio languages (all tracks ENG+SPA+etc..) <code>{mi_audio_language_dual}</code> Audio language ('Dual Audio' will be returned if there are 2 or more tracks with unique languages) <code>{mi_audio_language_multi}</code> Audio languages ('Multi' will be returned if there are 3 or more tracks with unique languages) <code>{mi_audio_sample_rate}</code> Audio sample rate (48.0 kHz) <code>{mi_video_3d}</code> Video 3D <code>{mi_video_bit_depth_dash}</code> Video bit depth (8-Bit) <code>{mi_video_bit_depth_space}</code> Video bit depth (8 Bit) <code>{mi_video_codec}</code> Video codec <code>{mi_video_dynamic_range}</code> Video dynamic range (HDR/SDR) <code>{mi_video_dynamic_range_type}</code> Video dynamic range type (DV, DV HDR, HDR, HDR10Plus, HLG, PQ) <code>{mi_video_dynamic_range_type_inc_sdr}</code> Video dynamic range type (DV, DV HDR, HDR, HDR10Plus, HLG, PQ and SDR) <code>{mi_video_dynamic_range_type_inc_sdr_over_1080}</code> Video dynamic range type (DV, DV HDR, HDR, HDR10Plus, HLG, PQ and SDR) when video width &gt;= 1080 <code>{mi_video_format}</code> Video format (AVC/HEVC/MPEG Video) <code>{mi_video_height}</code> Video height (1040) <code>{mi_video_language_full}</code> Video language (English) <code>{mi_video_language_iso_639_1}</code> Video language (EN) <code>{mi_video_language_iso_639_2}</code> Video language (ENG) <code>{mi_video_width}</code> Video width (1920) <code>{movie_clean_title}</code> Movie's clean title parsed from TMDB/IMDb <code>{movie_exact_title}</code> Movie's title parsed from TMDB/IMDb with no modifications <code>{movie_title}</code> Movie's title parsed from TMDB/IMDb with minimal formatting <code>{original_filename}</code> Original filename <code>{re_release}</code> Repack/Proper <code>{release_group}</code> Release group <code>{release_year}</code> Release year <code>{release_year_parentheses}</code> Release year with parentheses <code>{releasers_name}</code> Releaser's name (Anonymous) <code>{remux}</code> REMUX <code>{resolution}</code> Resolution (1080p) <code>{source}</code> Source media (BluRay/DVD) <code>{tmdb_id}</code> TMDB ID <code>{tvdb_id}</code> TVDB ID"}]}